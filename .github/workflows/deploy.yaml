on:
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  pipeline-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-2

      - name: Install and execute gomplate
        run: |
          curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.11.6/gomplate_linux-amd64-slim
          chmod 755 /usr/local/bin/gomplate
          gomplate --input-dir=tekton/ --output-dir=gomplate-final/ --datasource config=tekton/config.yaml

      - name: Deploy k8s artifacts and start PipelineRun
        run: |
          aws eks update-kubeconfig --name "acuity-nonprod" --region "us-east-2"
          eval $(aws sts assume-role --role-arn arn:aws:iam::336476408574:role/eks-admin-nonprod --role-session-name kubectl | jq -r '.Credentials | "export AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)\nexport AWS_SESSION_TOKEN=\(.SessionToken)\n"')
          sh ./gomplate-final/create-secret.sh
          kubectl apply -f ./gomplate-final/service-account.yaml
          kubectl apply -f ./gomplate-final/git-clone.yaml
          kubectl apply -f ./gomplate-final/docker-build.yaml
          kubectl apply -f ./gomplate-final/kubectl-deploy.yaml
          kubectl apply -f ./gomplate-final/pipeline.yaml
          kubectl create -f ./gomplate-final/pipeline-run.yaml
